{"version":3,"sources":["ChoroplethMap.js","App.js","index.js"],"names":["ChoroplethMap","x1","x2","y1","y2","features","setMouseOverData","datas","Jsondata","year","i","push","useState","setIsMouseOver","selectedYear","setSelectedYear","projection","d3","scale","center","path","lineStyle","stroke","strokeWidth","opacity","circleStyle","r","fill","className","Array","map","_","type","value","onChange","newSelectedYear","index","indexOf","console","log","includes","filter","item","handleChange","width","height","feature","d","k","data","len","経度","length","緯度","style","x","y","cx","cy","onMouseOver","台風名","名前","年","detailDatas","onMouseLeave","ChoroplethMapPage","setFeatures","useEffect","a","fetch","process","res","json","topojson","objects","japan","App","mouseOverData","bgcolor","size","render","document","querySelector"],"mappings":"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","file":"static/js/main.ac82d23d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport * as topojson from \"topojson\";\r\nimport Jsondata from \"./tyhoon-data-landing.json\";\r\n\r\nconst ChoroplethMap = ({ features, setMouseOverData }) => {\r\n  const width = 1000;\r\n  const height = 1000;\r\n  const standardScale = 1000;\r\n  const datas = Jsondata[0];\r\n  let year = [];\r\n  for (let i = 2001; i < 2021; i++) {\r\n    if (i != 2008) {\r\n      year.push(i);\r\n    }\r\n  }\r\n  let x1, x2, y1, y2;\r\n  const [isMouseOver, setIsMouseOver] = useState(false);\r\n  const [val, setVal] = useState([2001, 2002, 2003]);\r\n\r\n  // const [years, setYears] = useState(Array(20).fill(false));\r\n  const [selectedYear, setSelectedYear] = useState([]);\r\n\r\n  const projection = d3\r\n    .geoMercator()\r\n    .scale(standardScale)\r\n    .center([139.69167, 40.68944]);\r\n\r\n  const path = d3.geoPath().projection(projection);\r\n\r\n  const detailDatas = (data, i) => {\r\n    console.log(data.台風名);\r\n    setMouseOverData({\r\n      名前: data.台風名,\r\n      緯度: data.緯度[i],\r\n      経度: data.経度[i],\r\n      年: data.年,\r\n    });\r\n\r\n    setIsMouseOver(true);\r\n  };\r\n\r\n  // チェックボックスの判定部分\r\n  const handleChange = (i) => {\r\n    let value = i + 2001;\r\n    let index = selectedYear.indexOf(value);\r\n    console.log(index);\r\n    let newSelectedYear;\r\n    if (selectedYear.includes(value)) {\r\n      newSelectedYear = selectedYear.filter((item) => item !== value);\r\n    } else {\r\n      newSelectedYear = [...selectedYear, value];\r\n    }\r\n    console.log(newSelectedYear);\r\n    setSelectedYear(newSelectedYear);\r\n    console.log(selectedYear);\r\n    // let newSelectedYears = years;\r\n    // newSelectedYears[i] = !newSelectedYears[i];\r\n    // setYears(newSelectedYears);\r\n  };\r\n\r\n  //線のスタイルの変更の変数 一応まとめて作ったんだけどいらなかったら消して元に戻してください(´;ω;｀)\r\n  const lineStyle = {\r\n    stroke: \"black\", //色\r\n    strokeWidth: \"1.0px\",\r\n    opacity: \"0.5\", //透度\r\n  };\r\n\r\n  //円のスタイルの変更の変数\r\n  const circleStyle = {\r\n    r: \"3\",\r\n    fill: \"black\",\r\n    opacity: \"0.5\", //透度\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"box\">\r\n        <b>\r\n          {[...Array(19)].map((_, i) => {\r\n            if (i !== 7) {\r\n              return (\r\n                <label type=\"checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    value={i + 2001}\r\n                    onChange={() => handleChange(i)}\r\n                  />\r\n                  {i + 2001 + \" \"}\r\n                </label>\r\n              );\r\n            } else {\r\n              return;\r\n            }\r\n          })}\r\n        </b>\r\n      </div>\r\n      {/* <div className=\"box\">\r\n        <b>\r\n          {year.map((year, i) => {\r\n            return (\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value={String(year)}\r\n                  onChange={handleChange}\r\n                />\r\n                {year + \" \"}\r\n              </label>\r\n            );\r\n          })}\r\n        </b>\r\n      </div> */}\r\n\r\n      <svg width={width} height={height}>\r\n        <g>\r\n          {features.map((feature, i) => {\r\n            return (\r\n              <path key={i} d={path(feature)} fill=\"green\" stroke=\"white\" />\r\n            );\r\n          })}\r\n\r\n          {/* ここから線の描画 */}\r\n\r\n          {selectedYear.map((year, k) => {\r\n            return datas[year].map((data, index) => {\r\n              let len = data.経度.length;\r\n              return [...Array(len)].map((d, i) => {\r\n                if (i === 0) {\r\n                  x2 = projection([data.経度[i], data.緯度[i]])[0];\r\n                  y2 = projection([data.経度[i], data.緯度[i]])[1];\r\n                } else {\r\n                  x2 = x1;\r\n                  y2 = y1;\r\n                }\r\n                x1 = projection([data.経度[i], data.緯度[i]])[0];\r\n                y1 = projection([data.経度[i], data.緯度[i]])[1];\r\n                return (\r\n                  <line\r\n                    key={i}\r\n                    x1={x1}\r\n                    x2={x2}\r\n                    y1={y1}\r\n                    y2={y2}\r\n                    style={lineStyle}\r\n                  ></line>\r\n                );\r\n              });\r\n            });\r\n          })}\r\n\r\n          {/* ここからは点の描画 */}\r\n\r\n          {selectedYear.map((year, index) => {\r\n            return datas[year].map((data, index) => {\r\n              let len = data.経度.length;\r\n              return [...Array(len)].map((d, i) => {\r\n                const x = projection([data.経度[i], data.緯度[i]])[0];\r\n                const y = projection([data.経度[i], data.緯度[i]])[1];\r\n                return (\r\n                  <circle\r\n                    key={i}\r\n                    cx={x}\r\n                    cy={y}\r\n                    style={circleStyle}\r\n                    onMouseOver={() => detailDatas(data, i)}\r\n                    onMouseLeave={() => setIsMouseOver(false)}\r\n                  ></circle>\r\n                );\r\n              });\r\n            });\r\n          })}\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ChoroplethMapPage = (setMouseOverData) => {\r\n  const [features, setFeatures] = useState(null);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(`${process.env.PUBLIC_URL}/data/japan.json`);\r\n      const data = await res.json();\r\n      const { features } = topojson.feature(data, data.objects.japan);\r\n      setFeatures(features);\r\n    })();\r\n  }, []);\r\n  if (features == null) {\r\n    return <p>loading</p>;\r\n  }\r\n  return (\r\n    <ChoroplethMap features={features} setMouseOverData={setMouseOverData} />\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { ChoroplethMapPage } from \"./ChoroplethMap\";\r\n\r\nconst App = () => {\r\n  const [mouseOverData, setMouseOverData] = useState({\r\n    台風名: \"\",\r\n    緯度: \"\",\r\n    経度: \"\",\r\n    年: \"\",\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <body bgcolor=\"#e0ffff\">\r\n        <section className=\"hero is-primary\">\r\n          <div className=\"hero-body\">\r\n            <h1 className=\"title\">Japanese-typhoon </h1>\r\n          </div>\r\n        </section>\r\n\r\n        <div className=\"container\">\r\n          <section className=\"section\">\r\n            <div className=\"columns\">\r\n              <div className=\"column is-one-quarter\">\r\n                {/*プルダウンメニュー 画面3分の1*/}\r\n                <div className=\"box\" style={{ height: \"50%\" }}>\r\n                  <b>\r\n                    <font size=\"5\">Memu</font>\r\n                  </b>\r\n                  <div className=\"field\">\r\n                    <label className=\"label\">2008,2020は上陸なし</label>\r\n                  </div>\r\n\r\n                  <div className=\"field\">\r\n                    <label className=\"label\">\r\n                      <p>緯度:{mouseOverData.緯度}</p>\r\n                      <p>経度:{mouseOverData.経度}</p>\r\n                      <p>台風名:{mouseOverData.名前}</p>\r\n                      <p>年:{mouseOverData.年}</p>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"field\">\r\n                    <div className=\"control\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"column\">\r\n                <ChoroplethMapPage setMouseOverData={setMouseOverData} />\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n        <footer className=\"footer\">\r\n          <div className=\"content has-text-centered\">\r\n            <p>&copy; 2020 Tatsumi Ito , Yuki Hatasa , Kyohei Kaneko</p>\r\n          </div>\r\n        </footer>\r\n      </body>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\n// import ReactDOM from \"react-dom\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bulma/css/bulma.css\";\r\nrender(<App />, document.querySelector(\"#content\"));\r\n"],"sourceRoot":""}