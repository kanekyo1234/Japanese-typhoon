{"version":3,"sources":["ChoroplethMap.js","CheckBox.js","App.js","index.js"],"names":["ChoroplethMap","x1","x2","y1","y2","features","setMouseOverData","selectedYear","colorStyle","datas","Jsondata","year","i","push","useState","setIsMouseOver","projection","d3","scale","center","path","lineStyle","strokeWidth","circleStyle","r","fill","opacity","className","width","height","map","feature","d","stroke","k","data","index","len","経度","length","Array","緯度","style","Number","x","y","cx","cy","onMouseOver","console","log","名前","台風名","年","号","台風番号","日","月","時","最大風速","階級","中心気圧","detailDatas","onMouseLeave","ChoroplethMapPage","setFeatures","useEffect","a","fetch","process","res","json","topojson","objects","japan","CheckBox","setSelectedYear","isChecked","setIsChecked","years","handleChange","newSelectedYear","newCheckedYear","includes","filter","item","_","padding","type","paddingLeft","value","onChange","checked","textDecoration","textDecorationColor","onClick","marginTop","fontSize","App","mouseOverData","bgcolor","class","href","size","render","document","querySelector"],"mappings":"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","file":"static/js/main.b6262429.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport * as topojson from \"topojson\";\r\nimport Jsondata from \"./tyhoon-data-landing3.json\";\r\n\r\nconst ChoroplethMap = ({\r\n  features,\r\n  setMouseOverData,\r\n  selectedYear,\r\n  colorStyle,\r\n}) => {\r\n  const width = 1000;\r\n  const height = 1000;\r\n  const standardScale = 1500;\r\n  const datas = Jsondata[0];\r\n  let year = [];\r\n  for (let i = 2001; i < 2021; i++) {\r\n    if (i != 2008) {\r\n      year.push(i);\r\n    }\r\n  }\r\n  let x1, x2, y1, y2;\r\n  const [isMouseOver, setIsMouseOver] = useState(false);\r\n\r\n  const projection = d3\r\n    .geoMercator()\r\n    .scale(standardScale)\r\n    .center([139.69167, 40.68944]);\r\n\r\n  const path = d3.geoPath().projection(projection);\r\n\r\n  const detailDatas = (data, i, x, y) => {\r\n    console.log(x, y);\r\n    setMouseOverData({\r\n      名前: data.台風名,\r\n      年: data.年,\r\n      号: data.台風番号,\r\n      緯度: data.緯度[i],\r\n      経度: data.経度[i],\r\n      日: data.日[i],\r\n      月: data.月[i],\r\n      時: data.時[i],\r\n      最大風速: data.最大風速[i],\r\n      階級: data.階級[i],\r\n      中心気圧: data.中心気圧[i],\r\n    });\r\n\r\n    setIsMouseOver(true);\r\n  };\r\n\r\n  //線のスタイルの変更の変数 一応まとめて作ったんだけどいらなかったら消して元に戻してください(´;ω;｀)\r\n  const lineStyle = {\r\n    strokeWidth: \"2.0px\",\r\n    // opacity: \"\", //透度\r\n  };\r\n\r\n  //円のスタイルの変更の変数\r\n  const circleStyle = {\r\n    r: \"4\",\r\n    fill: \"black\",\r\n    opacity: \"0.5\", //透度\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <svg width={width} height={height}>\r\n        <g>\r\n          {features.map((feature, i) => {\r\n            return (\r\n              <path key={i} d={path(feature)} fill=\"white\" stroke=\"gray\" />\r\n            );\r\n          })}\r\n\r\n          {/* ここから線の描画 */}\r\n\r\n          {selectedYear.map((year, k) => {\r\n            return datas[year].map((data, index) => {\r\n              let len = data.経度.length;\r\n              return [...Array(len)].map((d, i) => {\r\n                if (i === 0) {\r\n                  x2 = projection([data.経度[i], data.緯度[i]])[0];\r\n                  y2 = projection([data.経度[i], data.緯度[i]])[1];\r\n                } else {\r\n                  x2 = x1;\r\n                  y2 = y1;\r\n                }\r\n                x1 = projection([data.経度[i], data.緯度[i]])[0];\r\n                y1 = projection([data.経度[i], data.緯度[i]])[1];\r\n                return (\r\n                  <line\r\n                    key={i}\r\n                    x1={x1}\r\n                    x2={x2}\r\n                    y1={y1}\r\n                    y2={y2}\r\n                    style={lineStyle}\r\n                    stroke={colorStyle[Number(year) - 2001]}\r\n                  ></line>\r\n                );\r\n              });\r\n            });\r\n          })}\r\n\r\n          {/* ここからは点の描画 */}\r\n\r\n          {selectedYear.map((year, index) => {\r\n            return datas[year].map((data, index) => {\r\n              let len = data.経度.length;\r\n              return [...Array(len)].map((d, i) => {\r\n                const x = projection([data.経度[i], data.緯度[i]])[0];\r\n                const y = projection([data.経度[i], data.緯度[i]])[1];\r\n                return (\r\n                  <circle\r\n                    key={i}\r\n                    cx={x}\r\n                    cy={y}\r\n                    style={circleStyle}\r\n                    onMouseOver={() => detailDatas(data, i, x, y)}\r\n                    onMouseLeave={() => setIsMouseOver(false)}\r\n                  ></circle>\r\n                );\r\n              });\r\n            });\r\n          })}\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const ChoroplethMapPage = ({\r\n  setMouseOverData,\r\n  selectedYear,\r\n  colorStyle,\r\n}) => {\r\n  const [features, setFeatures] = useState(null);\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch(`${process.env.PUBLIC_URL}/data/japan.json`);\r\n      const data = await res.json();\r\n      const { features } = topojson.feature(data, data.objects.japan);\r\n      setFeatures(features);\r\n    })();\r\n  }, []);\r\n  if (features == null) {\r\n    return <p>loading</p>;\r\n  }\r\n  return (\r\n    <ChoroplethMap\r\n      features={features}\r\n      setMouseOverData={setMouseOverData}\r\n      selectedYear={selectedYear}\r\n      colorStyle={colorStyle}\r\n    />\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst CheckBox = ({ setSelectedYear, selectedYear, colorStyle }) => {\r\n  const [isChecked, setIsChecked] = useState(new Array(20).fill(false));\r\n  const years = [\r\n    [2001, 2002],\r\n    [2003, 2004],\r\n    [2005, 2006],\r\n    [2007, 2009],\r\n    [2010, 2011],\r\n    [2012, 2013],\r\n    [2014, 2015],\r\n    [2016, 2017],\r\n    [2018, 2019],\r\n  ];\r\n\r\n  // チェックボックスの判定部分\r\n  const handleChange = (i, year) => {\r\n    let newSelectedYear;\r\n    let newCheckedYear = [...isChecked];\r\n    newCheckedYear[i] = !newCheckedYear[i];\r\n    setIsChecked(newCheckedYear);\r\n    if (selectedYear.includes(year)) {\r\n      newSelectedYear = selectedYear.filter((item) => item !== year);\r\n    } else {\r\n      newSelectedYear = [...selectedYear, year];\r\n    }\r\n    setSelectedYear(newSelectedYear);\r\n    console.log(selectedYear);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setIsChecked(new Array(20).fill(false));\r\n    setSelectedYear([]);\r\n    console.log(isChecked);\r\n  };\r\n  return (\r\n    <div className=\"containar\">\r\n      <b>\r\n        {years.map((_, i) => {\r\n          let index = i * 2;\r\n          return (\r\n            <div style={{ padding: \"4px 0\" }}>\r\n              <label\r\n                type=\"checkbox\"\r\n                style={{\r\n                  paddingLeft: \"30px\",\r\n                }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value={years[i][0]}\r\n                  onChange={() => handleChange(index, years[i][0])}\r\n                  checked={isChecked[index]}\r\n                />\r\n                <span\r\n                  style={{\r\n                    textDecoration: \"underline 3px\",\r\n                    textDecorationColor: colorStyle[years[i][0] - 2001],\r\n                  }}\r\n                >\r\n                  {\" \" + years[i][0] + \" \"}\r\n                </span>\r\n              </label>\r\n              <label\r\n                type=\"checkbox\"\r\n                style={{\r\n                  paddingLeft: \"40px\",\r\n                  //   textAlign: \"center\",\r\n                }}\r\n              >\r\n                <input\r\n                  type=\"checkbox\"\r\n                  value={years[i][1]}\r\n                  onChange={() => handleChange(index + 1, years[i][1])}\r\n                  checked={isChecked[index + 1]}\r\n                />\r\n                <span\r\n                  style={{\r\n                    textDecoration: \"underline 3px\",\r\n                    textDecorationColor: colorStyle[years[i][1] - 2001],\r\n                  }}\r\n                >\r\n                  {\" \" + years[i][1] + \" \"}\r\n                </span>\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </b>\r\n      <button\r\n        className=\"button is-small\"\r\n        onClick={() => handleDelete()}\r\n        style={{ marginTop: \"12px\" }}\r\n      >\r\n        <span style={{ padding: \"0 60px\", fontSize: \"25px\" }}>CREAR</span>\r\n      </button>\r\n      <br />\r\n      <p>※2008、2020は上陸なし</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React, { useState } from \"react\";\r\nimport { ChoroplethMapPage } from \"./ChoroplethMap\";\r\nimport CheckBox from \"./CheckBox\";\r\nimport { color } from \"d3\";\r\n\r\nconst App = () => {\r\n  const [selectedYear, setSelectedYear] = useState([]);\r\n  const [mouseOverData, setMouseOverData] = useState({\r\n    台風名: \"\",\r\n    緯度: \"\",\r\n    経度: \"\",\r\n    日: \"\",\r\n    時: \"\",\r\n    月: \"\",\r\n    最大風速: \"\",\r\n    号: \"\",\r\n    年: \"\",\r\n    階級: \"\",\r\n    中心気圧: \"\",\r\n  });\r\n\r\n  const colorStyle = [\r\n    \"#000000\",\r\n    \"#90A4AE\",\r\n    \"#CDDC39\",\r\n    \"#00ffff\",\r\n    \"#0000ff\",\r\n    \"#00008b\",\r\n    \"#00ff00\",\r\n    \"#008000\",\r\n    \"#008000\",\r\n    \"#deb887\",\r\n    \"#ffff00\",\r\n    \"#ffa500\",\r\n    \"#a0522d\",\r\n    \"#800000\",\r\n    \"#ff0000\",\r\n    \"#ff1493\",\r\n    \"#ff00ff\",\r\n    \"#800080\",\r\n    \"#fd8072\",\r\n  ];\r\n\r\n  return (\r\n    <body bgcolor=\"#e0ffff\">\r\n      <section className=\"hero is-primary\">\r\n        <div className=\"hero-body\">\r\n          <h1 className=\"title\">Japanese-typhoon </h1>\r\n        </div>\r\n      </section>\r\n      <div className=\"container\">\r\n        <br></br>\r\n        <section className=\"section\">\r\n          <article class=\"message is-dark\">\r\n            <div class=\"message-header\">\r\n              <p>このサイトについて</p>\r\n            </div>\r\n            <div class=\"message-body\">\r\n              上陸した台風の経路図を年ごとに表しているサイトです。年を指定して経路の違いを見てみましょう。\r\n              <p />\r\n              経路の点にマウスを合わせるとその時の情報が出てきます。\r\n              <p />\r\n              元データは気象庁「台風位置表」 (\r\n              <a href=\"https://www.data.jma.go.jp/fcd/yoho/typhoon/position_table/index.html\">\r\n                https://www.data.jma.go.jp/fcd/yoho/typhoon/position_table/index.html\r\n              </a>\r\n              )を加工して使用しました。\r\n            </div>\r\n          </article>\r\n        </section>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <section className=\"section\">\r\n          <div className=\"columns\">\r\n            <div className=\"column is-one-quarter\">\r\n              <div className=\"box\" style={{ height: \"42%\" }}>\r\n                <b>\r\n                  <font size=\"5\">CheckBox</font>\r\n                </b>\r\n                <CheckBox\r\n                  setSelectedYear={setSelectedYear}\r\n                  selectedYear={selectedYear}\r\n                  colorStyle={colorStyle}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"box\" style={{ height: \"30%\" }}>\r\n                <b>\r\n                  <font size=\"5\">Data</font>\r\n                </b>\r\n                <div className=\"field\">\r\n                  <label className=\"label\">\r\n                    <br />\r\n                    <p>\r\n                      {mouseOverData.月}月{mouseOverData.日}日{mouseOverData.時}\r\n                      時\r\n                    </p>\r\n                    <p>台風名 : {mouseOverData.名前}</p>\r\n                    <p>緯度 : {mouseOverData.緯度}</p>\r\n                    <p>経度 : {mouseOverData.経度}</p>\r\n\r\n                    <p>最大風速 : {mouseOverData.最大風速}</p>\r\n                    <p>号 : {mouseOverData.号}号</p>\r\n                    <p>階級 : {mouseOverData.階級}</p>\r\n                    <p>中心気圧 : {mouseOverData.中心気圧}</p>\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                  <div className=\"control\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"column\">\r\n              <ChoroplethMapPage\r\n                setMouseOverData={setMouseOverData}\r\n                selectedYear={selectedYear}\r\n                colorStyle={colorStyle}\r\n              />\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <footer className=\"footer\">\r\n        <div className=\"content has-text-centered\">\r\n          <p>&copy; 2020 Tatsumi Ito , Yuki Hatasa , Kyohei Kaneko</p>\r\n        </div>\r\n      </footer>\r\n    </body>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\n// import ReactDOM from \"react-dom\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bulma/css/bulma.css\";\r\nrender(<App />, document.querySelector(\"#content\"));\r\n"],"sourceRoot":""}